{
  // JSHint Default Configuration File (as on JSHint website)
  // See http://jshint.com/docs/ for more details

  "maxerr"        : 50,       // {int} Maximum error before stopping

  // Enforcing设置代码风格要严谨的属性
  "bitwise"       : false,     // true: Prohibit bitwise operators (&, |, ^, etc.)
  "camelcase"     : false,    // true: Identifiers must be in camelCase变量必须为驼峰
  "curly"         : true,     // true: Require {} for every new block or scope循环或者条件必须使用花括号包围
  "eqeqeq"        : false,     // true: Require triple equals (===) for comparison设置为true,禁止使用这个选项 ==和 !=，强制使用 ===和 !==。
  "forin"         : true,     // true: Require filtering for..in loops with obj.hasOwnProperty()这个选项要求所有 for in循环过滤对象的item。他在声明中允许for遍历一个对象所有属性的名称包括通过原型链继承来的属性。
  "freeze"        : false,     // true: prohibits overwriting prototypes of native objects such as Array, Date etc.这个选项禁止重写原生对象的原型列如 Array, Date等等。
  "immed"         : false,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
  "latedef"       : false,    // true: Require variables/functions to be defined before being used禁止定义之前使用变量，忽略function函数声明
  "newcap"        : false,    // true: Require capitalization of all constructor functions e.g. `new F()`构造器函数首字母大写
  "noarg"         : true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`
  "noempty"       : true,     // true: Prohibit use of empty blocks
  "nonbsp"        : true,     // true: Prohibit "non-breaking whitespace" characters. 不换行的空格警告
  "nonew"         : true,    // true: Prohibit use of constructors for side-effects (without assignment)这个选项禁止使用new构造器函数。有些人喜欢调用构造函数，但是不赋值给任何对象:
  "plusplus"      : false,    // true: Prohibit use of `++` and `--`
  "quotmark"      : false,    // Quotation mark consistency:
  //   false    : do nothing (default)
  //   true     : ensure whatever is used is consistent
  //   "single" : require single quotes
  //   "double" : require double quotes
  "undef"         : false,     // true: Require all non-global variables to be declared (prevents global leaks)变量未定义
  "unused"        : false,     // Unused variables:变量未使用
  //   true     : all variables, last function parameter
  //   "vars"   : all variables only
  //   "strict" : all variables, all function parameters
  "strict"        : false,     // true: Requires all functions run in ES5 Strict Mode使用严格模式
  "maxparams"     : 5,    // {int} Max number of formal params allowed per function最多参数个数
  "maxdepth"      : 5,    // {int} Max depth of nested blocks (within functions)最大嵌套深度
  "maxstatements" : false,    // {int} Max number statements per function
  "maxcomplexity" : false,    // {int} Max cyclomatic complexity per function复杂度检测
  "maxlen"        : false,    // {int} Max number of characters per line最大行数
  "varstmt"       : false,    // true: Disallow any var statements. Only `let` and `const` are allowed.

  // Relaxing代码的良好组织形式
  "asi"           : false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)
  "boss"          : false,     // true: Tolerate assignments where comparisons would be expected
  "debug"         : false,     // true: Allow debugger statements e.g. browser breakpoints.
  "eqnull"        : true,     // true: Tolerate use of `== null`
  "esversion"     : 3,         // {int} Specify the ECMAScript version to which the code must adhere.这个选项用于指定的ECMAScript版本代码必须遵循
  "moz"           : false,     // true: Allow Mozilla specific syntax (extends and overrides esnext features)
  // (ex: `for each`, multiple try/catch, function expression…)
  "evil"          : true,     // true: Tolerate use of `eval` and `new Function()`控制eval使用警告
  "expr"          : false,     // true: Tolerate `ExpressionStatement` as Programs
  "funcscope"     : true,     // true: Tolerate defining variables inside control statements禁止从外部访问内部声明的变量
  "globalstrict"  : false,     // true: Allow global "use strict" (also enables 'strict')
  "iterator"      : false,     // true: Tolerate using the `__iterator__` property
  "lastsemic"     : false,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block
  "laxbreak"      : false,     // true: Tolerate possibly unsafe line breakings检查不安全的折行(下个版本将被删除)
  "laxcomma"      : true,     // true: Tolerate comma-first style coding检查逗号在代码行最前面的编程风格
  "loopfunc"      : true,     // true: Tolerate functions being defined in loops禁止内部循环，定义函数的内部循环可能导致这样的错误:
  "multistr"      : false,     // true: Tolerate multi-line strings
  "noyield"       : false,     // true: Tolerate generator functions with no yield statement in them.
  "notypeof"      : true,     // true: Tolerate invalid typeof operator values  检查无效 typeof操作符的值
  "proto"         : false,     // true: Tolerate using the `__proto__` property
  "scripturl"     : false,     // true: Tolerate script-targeted URLs
  "shadow"        : false,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`  检查变量重复定义
  "sub"           : false,     // true: Tolerate using `[]` notation when it can still be expressed in dot notation
  "supernew"      : false,     // true: Tolerate `new function () { ... };` and `new Object;`
  "validthis"     : false,     // true: Tolerate using this in a non-constructor function

  // Environments您的代码运行环境
  "browser"       : true,     // Web Browser (window, document, etc)浏览器环境
  "browserify"    : false,    // Browserify (node.js code in the browser)
  "couch"         : false,    // CouchDB
  "devel"         : true,     // Development/debugging (alert, confirm, etc)
  "dojo"          : false,    // Dojo Toolkit
  "jasmine"       : false,    // Jasmine
  "jquery"        : false,    // jQuery
  "mocha"         : true,     // Mocha
  "mootools"      : false,    // MooTools
  "node"          : false,    // Node.js
  "nonstandard"   : false,    // Widely adopted globals (escape, unescape, etc)
  "phantom"       : false,    // PhantomJS
  "prototypejs"   : false,    // Prototype and Scriptaculous
  "qunit"         : false,    // QUnit
  "rhino"         : false,    // Rhino
  "shelljs"       : false,    // ShellJS
  "typed"         : false,    // Globals for typed array constructions
  "worker"        : false,    // Web Workers
  "wsh"           : false,    // Windows Scripting Host
  "yui"           : false,    // Yahoo User Interface

  // Custom Globals自定义的全局变量
  "globals"       : {
    "hna":true,
    "$":true,            //$为全局变量
    "jQuery":true     //jQuery为全局变量
  }        // additional predefined global variables
}